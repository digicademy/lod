{namespace lod = Digicademy\Lod\ViewHelpers}{escaping off}<lod:RemoveEmptyLines>
<f:for each="{lod:FilterIriNamespaces(iriNamespaces : iriNamespaces, returnDifference : false)}" as="value" key="prefix">@prefix {prefix}: <{value}> .
</f:for>

<{vocabulary.iri.namespace.value}{vocabulary.iri.value}>
    a owl:Ontology ;
    <f:if condition="{vocabulary.label}">dc:title {lod:EscapeLiteral(literal : vocabulary.label, format : 'turtle')} ;</f:if>
    <f:if condition="{vocabulary.comment}">dc:description {lod:EscapeLiteral(literal : vocabulary.comment, format : 'turtle')} ;</f:if>
    <f:render partial="Common/AlternativeSerializations" arguments="{mode : 'vocabularyObject', environment : environment}"/>
    <f:render partial="Common/Iri" arguments="{iri : vocabulary.iri}"/>

<f:render partial="Common/AlternativeSerializations" arguments="{mode : 'vocabularySubject', environment : environment}"/>

<f:if condition="{vocabulary.iri.statements}">
<f:for each="{lod:ObjectIriRecursion(iri : vocabulary.iri, maxDepth : 5)}" as="iri">
<{iri.namespace.value}{iri.value}>
    <f:render partial="Common/Iri" arguments="{iri : iri}" />
</f:for>
</f:if>

<f:if condition="{vocabulary.terms}">
<f:for each="{vocabulary.terms}" as="term">
<{term.namespace.iri}{term.value}>
<f:switch expression="{term.type}">
<f:case value="1">
    a owl:Class ;
    <f:render partial="Common/Iri" arguments="{iri : term}" />

<f:if condition="{term.statements}">
<f:for each="{lod:ObjectIriRecursion(iri : term, maxDepth : 5)}" as="iri">
<{iri.namespace.value}{iri.value}>
    <f:render partial="Common/Iri" arguments="{iri : iri}" />
</f:for>
</f:if>
</f:case>
<f:case value="2">
    a rdf:Property ;
    <f:render partial="Common/Iri" arguments="{iri : term}" />

<f:if condition="{term.statements}">
<f:for each="{lod:ObjectIriRecursion(iri : term, maxDepth : 5)}" as="iri">
<{iri.namespace.value}{iri.value}>
    <f:render partial="Common/Iri" arguments="{iri : iri}" />
</f:for>
</f:if>
</f:case>
</f:switch>
</f:for>
</f:if>
<f:if condition="{graph.statements}">
<f:for each="{graph.statements}" as="statement">
<{statement.subject.namespace.iri}{statement.subject.value}>
    <f:render partial="Common/Object" arguments="{statement : statement, closeStatement : '.'}" />
</f:for>
</f:if>
</lod:RemoveEmptyLines>