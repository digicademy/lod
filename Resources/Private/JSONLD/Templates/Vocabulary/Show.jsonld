{namespace lod = Digicademy\Lod\ViewHelpers}{escaping off}<lod:RemoveEmptyLines><lod:jsonldSerialize><f:format.raw>{</f:format.raw>
  "@context": <f:format.raw>{</f:format.raw>
<f:for each="{lod:FilterIriNamespaces(iriNamespaces : iriNamespaces, returnDifference : false)}" as="value" key="prefix" iteration="iriNamespaceIterator">
    "{prefix}": "{value}"<f:if condition="{iriNamespaceIterator.isLast}"><f:then></f:then><f:else>,</f:else></f:if>
</f:for>
  <f:format.raw>},</f:format.raw>
  "@graph" : [
    <f:format.raw>{</f:format.raw>
      "@type_tx_lod_v{vocabulary.uid}" : "owl:Ontology",
      "rdfs:seeAlso" : <f:format.raw>[</f:format.raw>
        <f:render partial="Common/AlternativeSerializations" arguments="{mode : 'vocabulary', environment : environment}"/>
      <f:format.raw>]</f:format.raw>,
      <f:render partial="Common/Iri" arguments="{iri : vocabulary.iri}"/>
      <f:if condition="{vocabulary.iri.statements}">
        <lod:IriCollection add="{lod:ObjectIriRecursion(iri : vocabulary.iri, maxDepth : 5)}"/>
      </f:if>
    <f:format.raw>}<f:if condition="{vocabulary.terms}">,</f:if></f:format.raw>
    <f:if condition="{vocabulary.terms}">
    <f:for each="{vocabulary.terms}" as="term" iteration="termIterator">
    <f:format.raw>{</f:format.raw>
    <f:switch expression="{term.type}">
    <f:case value="1">
      "@type_tx_lod_t{term.uid}" : "owl:Class",
      <f:if condition="{term.statements}">
        <lod:IriCollection add="{lod:ObjectIriRecursion(iri : term, maxDepth : 5)}"/>
      </f:if>
      <f:render partial="Common/Iri" arguments="{iri : term}"/>
    </f:case>
    <f:case value="2">
      "@type_tx_lod_t{term.uid}" : "rdf:Property",
      <f:if condition="{term.statements}">
        <lod:IriCollection add="{lod:ObjectIriRecursion(iri : term, maxDepth : 5)}"/>
      </f:if>
      <f:render partial="Common/Iri" arguments="{iri : term}"/>
    </f:case>
    </f:switch>
    <f:format.raw>}</f:format.raw><f:if condition="{termIterator.isLast}"><f:then><f:if condition="{iriCollection}"><f:then>,</f:then><f:else></f:else></f:if></f:then><f:else>,</f:else></f:if>
    </f:for><f:if condition="{graph.statements}">,
    <f:for each="{graph.statements}" as="statement" iteration="graphStatementIterator">
    <f:format.raw>{</f:format.raw>
      "@id": "{statement.subject.namespace.iri}{statement.subject.value}",
      <f:render partial="Common/Object" arguments="{statement : statement}"/>
    <f:format.raw>}</f:format.raw><f:if condition="{graphStatementIterator.isLast}"><f:then></f:then><f:else>,</f:else></f:if>
    </f:for></f:if>
    <f:if condition="{iriCollection}">
    <f:for each="{iriCollection}" as="collectedIri" iteration="iriCollectionIterator">
    <f:render partial="Common/Iri" arguments="{iri : collectedIri, asJsonObject : 1}" /><f:if condition="{iriCollectionIterator.isLast}"><f:then></f:then><f:else>,</f:else></f:if></f:for>
    </f:if>
    </f:if>
  ]
<f:format.raw>}</f:format.raw>
</lod:jsonldSerialize></lod:RemoveEmptyLines>