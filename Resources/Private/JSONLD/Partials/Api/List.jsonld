{namespace lod = Digicademy\Lod\ViewHelpers}{escaping off}<f:format.raw>{</f:format.raw>
  "@context": <f:format.raw>{</f:format.raw>
<f:for each="{lod:FilterIriNamespaces(iriNamespaces : iriNamespaces, returnDifference : false)}" as="value" key="prefix" iteration="iriNamespaceIterator">
    "{prefix}": "{value}"<f:if condition="{iriNamespaceIterator.isLast}"><f:then></f:then><f:else>,</f:else></f:if>
</f:for>
  <f:format.raw>},</f:format.raw>
    "@id": "{environment.TYPO3_REQUEST_HOST}{f:uri.page(additionalParams : {type : '2014'})}",
    "@type": [
      "{environment.TSFE.page.slug}/contexts/api/about.json#EntryPoint", "hydra:Collection"
    ],
    "rdfs:label": "{f:translate(key : 'api.list.header')}",
    "hydra:member": [
<f:for each="{resources}" as="resource" iteration="iterator">
      <f:format.raw>{</f:format.raw>
        "@id": "{resource.namespace.iri}{resource.value}",
        "@type": "schema:Dataset",
        "schema:identifier": "{resource.value}",
        <f:if condition="{resource.label}">"schema:name": {lod:EscapeLiteral(literal : resource.label, format : 'jsonld')},</f:if>
        <f:if condition="{resource.label}">"rdfs:label": <f:format.raw>{</f:format.raw>
          <f:if condition="{resource.labelLanguage}">"@language" : "{resource.labelLanguage}",</f:if>
          "@value" : {lod:EscapeLiteral(literal : resource.label, format : 'jsonld')}
        <f:format.raw>}</f:format.raw>,</f:if>
        <f:if condition="{resource.comment}">"rdfs:comment": <f:format.raw>{</f:format.raw>
          <f:if condition="{resource.commentLanguage}">"@language" : "{resource.commentLanguage}",</f:if>
          "@value" : {lod:EscapeLiteral(literal : resource.comment, format : 'jsonld')}
        <f:format.raw>}</f:format.raw>,</f:if>
        "rdfs:seeAlso" : <f:format.raw>[</f:format.raw>
        <f:render partial="Common/AlternativeSerializations" arguments="{mode : 'api', environment : environment, resource : resource}" />
        <f:format.raw>]</f:format.raw>
      <f:format.raw>}</f:format.raw><f:if condition="{iterator.isLast}"><f:then></f:then><f:else>,</f:else></f:if>
</f:for>
    ],
    "hydra:totalItems": "{totalItems}",
    "hydra:view": <f:format.raw>{</f:format.raw>
      "@id": "{environment.TYPO3_REQUEST_HOST}{f:render(partial : 'Api/Uri', arguments : {action : 'list', type : '2014', limit : arguments.limit, query : arguments.query, page : '{f:if(condition : \'{arguments.page}\', then : \'{arguments.page}\', else : \'1\')}'})}",
    "@type": [
      "hydra:PartialCollectionView"
    ],
    "hydra:first": <f:format.raw>{</f:format.raw>
      "@id": "{environment.TYPO3_REQUEST_HOST}{f:render(partial : 'Api/Uri', arguments : {action : 'list', type : '2014', page : pagination.first, limit : arguments.limit, query : arguments.query, subject : arguments.subject, predicate : arguments.predicate, object : arguments.object, sorting : arguments.sorting})}"
    <f:format.raw>}</f:format.raw>,
    "hydra:last": <f:format.raw>{</f:format.raw>
      "@id": "{environment.TYPO3_REQUEST_HOST}{f:render(partial : 'Api/Uri', arguments : {action : 'list', type : '2014', page : pagination.last, limit : arguments.limit, query : arguments.query, subject : arguments.subject, predicate : arguments.predicate, object : arguments.object, sorting : arguments.sorting})}"
    <f:format.raw>}</f:format.raw>,
    "hydra:next": <f:format.raw>{</f:format.raw>
      "@id": "{environment.TYPO3_REQUEST_HOST}{f:render(partial : 'Api/Uri', arguments : {action : 'list', type : '2014', page : pagination.next, limit : arguments.limit, query : arguments.query, subject : arguments.subject, predicate : arguments.predicate, object : arguments.object, sorting : arguments.sorting})}"
    <f:format.raw>}</f:format.raw>,
    "hydra:previous": <f:format.raw>{</f:format.raw>
      "@id": "{environment.TYPO3_REQUEST_HOST}{f:render(partial : 'Api/Uri', arguments : {action : 'list', type : '2014', page : pagination.previous, limit : arguments.limit, query : arguments.query, subject : arguments.subject, predicate : arguments.predicate, object : arguments.object, sorting : arguments.sorting})}"
    <f:format.raw>}</f:format.raw>
    <f:format.raw>},</f:format.raw>
<f:format.raw>  "hydra:search": {
    "@type": "hydra:IriTemplate",
    "hydra:mapping": [
      {
        "@type": "hydra:IriTemplateMapping",
        "hydra:property": "hydra:freetextQuery",
        "hydra:required": false,
        "hydra:variable": "q"
      }
    ],</f:format.raw>
    "hydra:template": "{environment.TYPO3_REQUEST_HOST}{f:uri.page(additionalParams : {type : '2014'})}?tx_lod_api%5Bpage%5D=1&tx_lod_api%5Bquery%5D={?q}",<f:format.raw>
    "hydra:variableRepresentation": "hydra:BasicRepresentation"
  }</f:format.raw>
<f:format.raw>}</f:format.raw>